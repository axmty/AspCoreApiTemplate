[*.cs]

########################### Code style ###########################

###### Language rules

# 'this.' qualifier
dotnet_style_qualification_for_field    = true:warning
dotnet_style_qualification_for_property = true:warning
dotnet_style_qualification_for_method   = true:warning
dotnet_style_qualification_for_event    = true:warning

# Language keywords instead of framework type names for type references
dotnet_style_predefined_type_for_locals_parameters_members = true:warning
dotnet_style_predefined_type_for_member_access             = true:warning

# Modifier preferences
dotnet_style_require_accessibility_modifiers = always:warning
csharp_preferred_modifier_order              = public, private, protected, internal, static, extern, new, virtual, abstract, sealed, override, readonly, unsafe, volatile, async:warning
dotnet_style_readonly_field                  = true:warning

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_other_binary_operators      = always_for_clarity:warning
dotnet_style_parentheses_in_other_operators             = never_if_unnecessary:warning

# Expression-level preferences
dotnet_style_object_initializer                            = true:warning
dotnet_style_collection_initializer                        = true:warning
dotnet_style_explicit_tuple_names                          = true:warning
dotnet_style_prefer_inferred_tuple_names                   = false:warning
dotnet_style_prefer_inferred_anonymous_type_member_names   = false:warning
dotnet_style_prefer_auto_properties                        = true:warning
dotnet_style_prefer_conditional_expression_over_assignment = true:warning
dotnet_style_prefer_conditional_expression_over_return     = true:warning
dotnet_style_prefer_compound_assignment                    = true:warning
dotnet_style_prefer_simplified_interpolation               = true:warning
dotnet_style_prefer_simplified_boolean_expressions         = true:warning
dotnet_diagnostic.IDE0010.severity                         = warning
dotnet_diagnostic.IDE0082.severity                         = warning

# Null-checking preferences
dotnet_style_coalesce_expression                                 = true:warning
dotnet_style_null_propagation                                    = true:warning
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:warning

# 'var' preferences
csharp_style_var_for_built_in_types    = true:warning
csharp_style_var_when_type_is_apparent = true:warning
csharp_style_var_elsewhere             = true:warning

# Expression-bodied members
csharp_style_pattern_matching_over_is_with_cast_check = true:warning
csharp_style_pattern_matching_over_as_with_null_check = true:warning
csharp_style_prefer_switch_expression                 = true:warning
csharp_style_prefer_pattern_matching                  = true:warning
csharp_style_prefer_not_pattern                       = true:warning

# Expression-level preferences
csharp_style_inlined_variable_declaration                   = true:warning
csharp_prefer_simple_default_expression                     = true:warning
csharp_style_deconstructed_variable_declaration             = true:warning
csharp_style_prefer_index_operator                          = true:warning
csharp_style_prefer_range_operator                          = true:warning
csharp_style_implicit_object_creation_when_type_is_apparent = true:warning
dotnet_diagnostic.IDE0082.severity                          = warning

# "Null" checking preferences
csharp_style_throw_expression          = true:warning
csharp_style_conditional_delegate_call = true:warning

# Code block preferences
csharp_prefer_braces                 = true:warning
csharp_prefer_simple_using_statement = true:warning

# 'using' directive preferences
csharp_using_directive_placement = outside_namespace:warning

# Modifier preferences
csharp_prefer_static_local_function = true:warning
dotnet_diagnostic.IDE0082.severity  = warning

###### Formatting rules

# Organize usings
dotnet_sort_system_directives_first = true:warning

# Newline options
csharp_new_line_before_open_brace                     = all
csharp_new_line_before_else                           = true
csharp_new_line_before_catch                          = true
csharp_new_line_before_finally                        = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types     = true
csharp_new_line_between_query_expression_clauses      = true

# Indentation options
csharp_indent_case_contents			   = true
csharp_indent_switch_labels			   = true
csharp_indent_block_contents		   = true
csharp_indent_braces				   = false
csharp_indent_case_contents_when_block = false

# Spacing options
csharp_space_after_cast													 = false
csharp_space_after_keywords_in_control_flow_statements					 = true
csharp_space_before_colon_in_inheritance_clause							 = true
csharp_space_after_colon_in_inheritance_clause							 = true
csharp_space_around_binary_operators									 = before_and_after
csharp_space_between_method_declaration_parameter_list_parentheses		 = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis		 = false
csharp_space_between_method_call_parameter_list_parentheses				 = false
csharp_space_between_method_call_empty_parameter_list_parentheses		 = false
csharp_space_between_method_call_name_and_opening_parenthesis			 = false
csharp_space_after_comma												 = true
csharp_space_before_comma												 = false
csharp_space_after_dot													 = false
csharp_space_before_dot													 = false
csharp_space_after_semicolon_in_for_statement							 = true
csharp_space_before_semicolon_in_for_statement							 = false
csharp_space_around_declaration_statements								 = false
csharp_space_before_open_square_brackets								 = false
csharp_space_between_empty_square_brackets								 = false
csharp_space_between_square_brackets									 = false

# Wrap options
csharp_preserve_single_line_statements = false
csharp_preserve_single_line_blocks	   = true

###### Unnecessary code rules

dotnet_diagnostic.IDE0001.severity    = warning
dotnet_diagnostic.IDE0002.severity    = warning
dotnet_diagnostic.IDE0004.severity    = warning
dotnet_diagnostic.IDE0005.severity    = warning
dotnet_diagnostic.IDE0035.severity    = warning
dotnet_diagnostic.IDE0051.severity    = warning
dotnet_diagnostic.IDE0052.severity    = warning
dotnet_code_quality_unused_parameters = non_public:warning
dotnet_diagnostic.IDE0100.severity    = warning
dotnet_diagnostic.IDE0110.severity    = warning

###### Naming rules

# Rules

dotnet_naming_rule.interface_should_be_begins_with_i.severity = warning
dotnet_naming_rule.interface_should_be_begins_with_i.symbols  = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style    = begins_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = warning
dotnet_naming_rule.types_should_be_pascal_case.symbols  = types
dotnet_naming_rule.types_should_be_pascal_case.style    = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = warning
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols  = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style    = pascal_case

dotnet_naming_rule.non_static_fields_should_be_camel_case.severity = warning
dotnet_naming_rule.non_static_fields_should_be_camel_case.symbols  = non_static_field_members
dotnet_naming_rule.non_static_fields_should_be_camel_case.style    = camel_case

dotnet_naming_rule.static_fields_should_be_pascal_case.severity = warning
dotnet_naming_rule.static_fields_should_be_pascal_case.symbols  = static_field_members
dotnet_naming_rule.static_fields_should_be_pascal_case.style    = pascal_case

dotnet_naming_rule.type_parameter_should_begin_with_t.severity = warning
dotnet_naming_rule.type_parameter_should_begin_with_t.symbols  = type_parameters
dotnet_naming_rule.type_parameter_should_begin_with_t.style    = begins_with_t

# Symbol specifications

dotnet_naming_symbols.interface.applicable_kinds           = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected

dotnet_naming_symbols.types.applicable_kinds           = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected

dotnet_naming_symbols.non_field_members.applicable_kinds           = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected

dotnet_naming_symbols.non_static_field_members.applicable_kinds           = field
dotnet_naming_symbols.non_static_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected

dotnet_naming_symbols.static_field_members.applicable_kinds           = field
dotnet_naming_symbols.static_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.static_field_members.required_modifiers         = static

dotnet_naming_symbols.type_parameters.applicable_kinds           = type_parameter
dotnet_naming_symbols.type_parameters.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected

# Naming styles

dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.camel_case.capitalization = camel_case

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.capitalization  = pascal_case

dotnet_naming_style.begins_with_t.required_prefix = T
dotnet_naming_style.begins_with_t.capitalization  = pascal_case



########################## Code quality ##########################

